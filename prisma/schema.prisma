generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id          BigInt    @id @default(autoincrement())
  name        String
  description String?
  image_url   String
  created_at  DateTime  @default(now()) @db.Timestamptz(3)
  updated_at  DateTime? @updatedAt @db.Timestamptz(3)
  deleted_at  DateTime? @db.Timestamptz(3)
  products    Product[]

  @@map("games")
}

model Payment {
  id         BigInt    @id @default(autoincrement())
  name       String
  image_url  String
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt @db.Timestamptz(3)
  deleted_at DateTime? @db.Timestamptz(3)
  orders     Order[]

  @@map("payments")
}

model Product {
  id          BigInt    @id @default(autoincrement())
  game_id     BigInt
  name        String
  description String?
  price       Int
  image_url   String
  quantity    Int
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @updatedAt @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  orders      Order[]
  game        Game      @relation(fields: [game_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("products")
}

model User {
  id         BigInt    @id @default(autoincrement())
  email      String    @unique
  password   String
  name       String
  image_url  String?
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @updatedAt @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)

  @@map("users")
}

model Order {
  id             BigInt    @id @default(autoincrement())
  payment_id     BigInt
  product_id     BigInt
  uid            String
  email          String?
  price          Decimal   @db.Decimal
  status_order   String?
  payment_status String?
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @updatedAt @db.Timestamptz(6)
  deleted_at     DateTime? @db.Timestamptz(6)
  payment        Payment   @relation(fields: [payment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product        Product   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("orders")
}
